{"version":3,"sources":["layout/Menu.js","utils/date-time.js","utils/format-reservation-date.js","utils/api.js","reservations/CancelReservationButton.js","reservations/ReservationCard.js","reservations/ReservationList.js","tables/TableCard.js","tables/TablesList.js","dashboard/DateNavButtons.js","layout/ErrorAlert.js","dashboard/Dashboard.js","layout/NotFound.js","reservations/ReservationForm.js","reservations/ReservationCreate.js","reservations/ReservationEdit.js","tables/TablesCreate.js","seats/Seat.js","search/Search.js","utils/useQuery.js","layout/Routes.js","layout/Layout.js","App.js","index.js"],"names":["Menu","className","to","id","type","dateFormat","asDateString","date","getFullYear","toString","getMonth","padStart","getDate","today","Date","formatDate","reservation","reservation_date","match","formatReservationDate","reservations","Array","isArray","map","API_BASE_URL","process","headers","Headers","fetchJson","url","options","onCancel","a","fetch","response","status","json","payload","error","Promise","reject","message","data","name","console","stack","resolve","listReservations","params","signal","URL","Object","entries","forEach","key","value","searchParams","append","then","formatReservationTime","people","Number","method","body","JSON","stringify","readReservation","reservation_id","table_id","updatedReservation","reservation_time","slice","listTables","table","capacity","updatedTable","CancelReservationButton","setReservationsError","loadReservationsAndTables","onClick","event","preventDefault","window","confirm","cancelReservation","catch","ReservationCard","first_name","last_name","mobile_number","style","maxWidth","href","textAlign","role","ReservationList","TableCard","table_name","setTablesError","removeReservation","TablesList","tables","DateNavButtons","currentDate","history","useHistory","push","split","year","month","day","setMonth","setDate","previous","next","ErrorAlert","setError","Dashboard","useState","setReservations","reservationsError","setTables","tablesError","abortController","AbortController","loadReservations","loadTables","abort","useEffect","length","NotFound","ReservationForm","handleSubmit","handleChange","onSubmit","htmlFor","onChange","required","pattern","placeholder","min","max","marginRight","go","ReservationCreate","setReservation","createReservation","newReservation","target","ReservationEdit","useParams","loadReservation","updateReservation","TableCreate","setTable","createTable","minlength","Seat","selectedTable","setSelectedTable","updateTable","marginTop","Search","setMobileNumber","reservationMessage","setReservationMessage","useQuery","URLSearchParams","useLocation","search","Routes","get","exact","path","TablesCreate","Layout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b69f06d.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Menu.css\";\n\n/**\n * Defines the menu for this application.\n *\n * @returns {JSX.Element}\n */\n\nfunction Menu() {\n  return (\n    <nav className=\"navbar navbar-dark align-items-start p-0\">\n      <div className=\"container-fluid d-flex flex-column p-0\">\n        <Link\n          className=\"navbar-brand d-flex justify-content-center align-items-center sidebar-brand m-0\"\n          to=\"/\"\n        >\n          <div className=\"sidebar-brand-text mx-3\">\n            <span>Periodic Tables</span>\n          </div>\n        </Link>\n        <hr className=\"sidebar-divider my-0\" />\n        <ul className=\"nav navbar-nav text-light\" id=\"accordionSidebar\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <span className=\"oi oi-dashboard\" />\n              &nbsp;Dashboard\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/search\">\n              <span className=\"oi oi-magnifying-glass\" />\n              &nbsp;Search\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/reservations/new\">\n              <span className=\"oi oi-plus\" />\n              &nbsp;New Reservation\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/tables/new\">\n              <span className=\"oi oi-layers\" />\n              &nbsp;New Table\n            </Link>\n          </li>\n        </ul>\n        <div className=\"text-center d-none d-md-inline\">\n          <button\n            className=\"btn rounded-circle border-0\"\n            id=\"sidebarToggle\"\n            type=\"button\"\n          />\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Menu;\n","const dateFormat = /\\d\\d\\d\\d-\\d\\d-\\d\\d/;\nconst timeFormat = /\\d\\d:\\d\\d/;\n\n/**\n * Formats a Date object as YYYY-MM-DD.\n *\n * This function is *not* exported because the UI should generally avoid working directly with Date instance.\n * You may export this function if you need it.\n *\n * @param date\n *  an instance of a date object\n * @returns {string}\n *  the specified Date formatted as YYYY-MM-DD\n */\nfunction asDateString(date) {\n  return `${date.getFullYear().toString(10)}-${(date.getMonth() + 1)\n    .toString(10)\n    .padStart(2, \"0\")}-${date.getDate().toString(10).padStart(2, \"0\")}`;\n}\n\n/**\n * Format a date string in ISO-8601 format (which is what is returned from PostgreSQL) as YYYY-MM-DD.\n * @param dateString\n *  ISO-8601 date string\n * @returns {*}\n *  the specified date string formatted as YYYY-MM-DD\n */\nexport function formatAsDate(dateString) {\n  return dateString.match(dateFormat)[0];\n}\n\n/**\n * Format a time string in HH:MM:SS format (which is what is returned from PostgreSQL) as HH:MM.\n * @param timeString\n *  HH:MM:SS time string\n * @returns {*}\n *  the specified time string formatted as YHH:MM.\n */\nexport function formatAsTime(timeString) {\n  return timeString.match(timeFormat)[0];\n}\n\n/**\n * Today's date as YYYY-MM-DD.\n * @returns {*}\n *  the today's date formatted as YYYY-MM-DD\n */\nexport function today() {\n  return asDateString(new Date());\n}\n\n/**\n * Subtracts one day to the specified date and return it in as YYYY-MM-DD.\n * @param currentDate\n *  a date string in YYYY-MM-DD format (this is also ISO-8601 format)\n * @returns {*}\n *  the date one day prior to currentDate, formatted as YYYY-MM-DD\n */\nexport function previous(currentDate) {\n  let [ year, month, day ] = currentDate.split(\"-\");\n  month -= 1;\n  const date = new Date(year, month, day);\n  date.setMonth(date.getMonth());\n  date.setDate(date.getDate() - 1);\n  return asDateString(date);\n}\n\n/**\n * Adds one day to the specified date and return it in as YYYY-MM-DD.\n * @param currentDate\n *  a date string in YYYY-MM-DD format (this is also ISO-8601 format)\n * @returns {*}\n *  the date one day after currentDate, formatted as YYYY-MM-DD\n */\nexport function next(currentDate) {\n  let [ year, month, day ] = currentDate.split(\"-\");\n  month -= 1;\n  const date = new Date(year, month, day);\n  date.setMonth(date.getMonth());\n  date.setDate(date.getDate() + 1);\n  return asDateString(date);\n}\n","import { formatAsDate } from \"./date-time\";\n\nfunction formatDate(reservation) {\n  reservation.reservation_date = formatAsDate(reservation.reservation_date);\n  return reservation;\n}\n\n/**\n * Formats the reservation_date property of a reservation.\n * @param reservations\n *  a single reservation, or an array of reservations.\n * @returns {[reservation]|reservation}\n *  the specified reservation(s) with the reservation_date property formatted as YYYY-MM-DD.\n */\nexport default function formatReservationDate(reservations) {\n  return Array.isArray(reservations)\n    ? reservations.map(formatDate)\n    : formatDate(reservations);\n}\n","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nimport formatReservationDate from \"./format-reservation-date\";\nimport formatReservationTime from \"./format-reservation-date\";\n\nconst API_BASE_URL =\n  process.env.REACT_APP_API_BASE_URL || \"http://localhost:5001\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @param onCancel\n *  value to return if fetch call is aborted. Default value is undefined.\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\nasync function fetchJson(url, options, onCancel) {\n  try {\n    const response = await fetch(url, options);\n\n    if (response.status === 204) {\n      return null;\n    }\n\n    const payload = await response.json();\n\n    if (payload.error) {\n      return Promise.reject({ message: payload.error });\n    }\n    return payload.data;\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.stack);\n      throw error;\n    }\n    return Promise.resolve(onCancel);\n  }\n}\n\n/**\n * Retrieves all existing reservation.\n * @returns {Promise<[reservations]>}\n *  a promise that resolves to a possibly empty array of reservation saved in the database.\n */\n\nexport async function listReservations(params, signal) {\n  const url = new URL(`${API_BASE_URL}/reservations`);\n  Object.entries(params).forEach(([key, value]) =>\n    url.searchParams.append(key, value.toString())\n  );\n  return await fetchJson(url, { headers, signal }, [])\n    .then(formatReservationDate)\n    .then(formatReservationTime);\n}\n\nexport async function createReservation(reservation, signal) {\n  const url = `${API_BASE_URL}/reservations`;\n  reservation.people = Number(reservation.people);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify({ data: reservation }),\n    signal,\n  };\n  return await fetchJson(url, options, reservation);\n}\n\n/**\n * Retrieves a reservation from a given id.\n * @returns {Promise<[reservation]>}\n *  a promise that resolves to the reservation.\n */\nexport async function readReservation(reservation_id, signal) {\n  const url = `${API_BASE_URL}/reservations/${reservation_id}`;\n  return await fetchJson(url, { signal }, [])\n    .then(formatReservationDate)\n    .then(formatReservationTime);\n}\n\n/**\n * Removes current reservation_id from table.\n * Changes given reservation status to \"finished.\"\n * Does not return anything.\n */\nexport async function removeReservation(table_id, signal){\n  const url = `${API_BASE_URL}/tables/${table_id}/seat`;\n  const options = {\n    method: \"DELETE\",\n    signal\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Updates existing reservation.\n * \n * @param updatedReservation\n *  the reservation to update, which must have a 'id' property.\n * @returns {Promise<[reservation]>}\n *  a promise that resolves to the updated reservation.\n */\nexport async function updateReservation(updatedReservation, signal) {\n  const url = `${API_BASE_URL}/reservations/${updatedReservation.reservation_id}`;\n  updatedReservation.people = Number(updatedReservation.people);\n  updatedReservation.reservation_time = updatedReservation.reservation_time.slice(0, 5);\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify({data: updatedReservation }),\n  };\n  return await fetchJson(url, options, updatedReservation);\n}\n\n/**\n * Changes given reservation status to \"cancelled.\"\n * @returns {Promise<[reservation]>}\n *  a promise that resolves to the updated reservation, which will now have a status of \"cancelled\".\n */\nexport async function cancelReservation(reservation_id, status, signal) {\n  const url = `${API_BASE_URL}/reservations/${reservation_id}/status`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify({data: { status: status } }),\n  };\n  return await fetchJson(url, options, { status })\n}\n\n/**\n * Retrieves all existing tables.\n * @returns {Promise<[table]>}\n *  a promise that resolves to a possibly empty array of tables saved in the database.\n */\nexport async function listTables(signal) {\n  const url = `${API_BASE_URL}/tables`;\n  return await fetchJson(url, { headers, signal }, []);\n}\n\n/**\n * Saves the table to the database.\n * @returns {Promise<[table]>}\n *  a promise that resolves to the saved table, which will now have an 'id' property.\n */\nexport async function createTable(table, signal) {\n  const url = `${API_BASE_URL}/tables`;\n  table.capacity = Number(table.capacity);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify({ data: table }),\n    signal,\n  };\n  return await fetchJson(url, options, table);\n};\n\n/**\n * Updates chosen table with given reservation_id\n * \n * @param reservation_id\n * reservation_id to add to table - specified in body for tests to pass \n * @param table_id \n * table to assign reservation\n * @param updatedTable \n * table to return from db with newly assigned reservation_id\n * @returns {Promise<[updateTable]>}\n * a promise that resolves to the updated table, which will now have a reservation_id\n */\nexport async function updateTable(reservation_id, table_id, updatedTable, signal) {\n  const url = `${API_BASE_URL}/tables/${table_id}/seat`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify({ data: { reservation_id: reservation_id } }),\n  };\n  return await fetchJson(url, options, updatedTable);\n}\n","import React from \"react\";\nimport { cancelReservation } from \"../utils/api\";\n\nfunction CancelReservationButton({ reservation_id, setReservationsError, loadReservationsAndTables }) {\n\n  const handleOk = (event) => {\n    event.preventDefault();\n    const message = \"Do you want to cancel this reservation? This cannot be undone.\";\n    if (window.confirm(message)) {\n      cancelReservation(reservation_id, \"cancelled\")\n        .then(() => loadReservationsAndTables())\n        .catch(setReservationsError);\n    }\n  };\n\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        className=\"btn btn-danger\"\n        onClick={handleOk}\n        data-reservation-id-cancel={reservation_id}>\n          Cancel\n      </button>\n    </>\n  );\n}\n\nexport default CancelReservationButton;","import React from \"react\";\nimport CancelReservationButton from \"./CancelReservationButton\";\nimport \"./ReservationCard.css\";\n\nfunction ReservationCard({ \n    reservation_id, \n    first_name, \n    last_name, \n    mobile_number, \n    reservation_date, \n    reservation_time, \n    people,\n    status,\n    setReservationsError,\n    loadReservationsAndTables\n}) {\n\n  return (\n    <div className=\"card border-secondary mb-3\" style={{maxWidth: \"25rem\"}}>\n      <h4 className=\"card-header d-flex justify-content-between align-items-center\">\n        {last_name}, {first_name}\n        {status === \"booked\" && <a \n          type=\"button\" \n          className=\"btn btn-outline-secondary\"\n          href={`/reservations/${reservation_id}/edit`}\n        >\n          Edit\n        </a>}\n      </h4>\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{reservation_time}, {reservation_date}</h5>\n        <h6 className=\"card-subtitle mb-2 text-muted\">Guests: {people}</h6>\n        <h6 className=\"card-subtitle mb-2 text-muted\">Mobile Number: {mobile_number}</h6>\n      </div>\n\n      <div \n       className=\"card-footer border-secondary text-secondary\"\n       id=\"resCardFooter\"\n       style={{textAlign: \"right\"}}\n      >\n       \n      {/* seat button */}\n      {status === \"booked\" &&\n         <a \n           className=\"btn btn-secondary\" \n           id=\"seatButton\"\n           href={`/reservations/${reservation_id}/seat`} \n           role=\"button\">\n           Seat\n         </a>\n      }\n\n      {/* Status Badge */}\n      <h5>\n        <span \n         className=\"badge bg-info text-light\"\n         id=\"statusBadge\"\n         data-reservation-id-status={reservation_id}\n        >\n          {status}\n        </span>\n      </h5>\n      \n      {/* Cancel Reservation Button */}\n      {status === \"booked\" &&\n      <CancelReservationButton\n          reservation_id={reservation_id}\n          setReservationsError={setReservationsError}\n          loadReservationsAndTables={loadReservationsAndTables}\n      />}\n      </div>\n    </div>\n  );\n}\n\nexport default ReservationCard;","import React from \"react\";\nimport ReservationCard from \"./ReservationCard\";\n\nfunction ReservationList({ \n  reservations, \n  setReservationsError, \n  loadReservationsAndTables \n}) {\n  \n    return (\n    <div id=\"reservationGrid\" className=\"row row-cols-3\">\n      {reservations.map((reservation) => (\n        <div className=\"col-sm\" key={reservation.reservation_id}>\n            <ReservationCard\n              reservation_id={reservation.reservation_id}\n              first_name={reservation.first_name}\n              last_name={reservation.last_name}\n              mobile_number={reservation.mobile_number}\n              reservation_date={reservation.reservation_date}\n              reservation_time={reservation.reservation_time.slice(0, 5)}\n              people={reservation.people}\n              status={reservation.status}\n              setReservationsError={setReservationsError}\n              loadReservationsAndTables={loadReservationsAndTables}\n            />\n          </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ReservationList;","import React from \"react\";\nimport { removeReservation } from \"../utils/api\";\nimport \"./TableCard.css\";\n\n\nfunction TableCard({\n    table_id,\n    table_name,\n    capacity,\n    reservation_id,\n    setTablesError,\n    loadReservationsAndTables,\n  }) { \n\n    const handleFinish = (event) => {\n      event.preventDefault();\n      const message = \"Is this table ready to seat new guests? This cannot be undone.\";\n      if (window.confirm(message)) {\n        removeReservation(table_id)\n          .then(() => {\n            loadReservationsAndTables();\n          })\n          .catch(setTablesError);\n    }\n  }\n\n\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <span className=\"badge capacity-badge\">\n            {capacity}\n          </span>\n          <h6 className=\"card-title\">{table_name}</h6>\n          <p className=\"card-subtitle mb-2 text-muted\">Reservation {reservation_id}</p>\n          <div \n            className={`alert ${reservation_id ? \"alert-warning\" : \"alert-success\"}`} \n            id=\"statusWithFinishButton\"\n            role=\"alert\" \n            data-table-id-status={table_id}>\n              {reservation_id ? \"Occupied\" : \"Free\"}\n              {reservation_id && \n                <button \n                  type=\"button\" \n                  className=\"btn\"\n                  id=\"finishButton\"\n                  onClick={handleFinish}\n                  data-table-id-finish={table_id}>\n                    Finish\n                  </button>\n              }\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default TableCard;","import React from \"react\";\nimport TableCard from \"./TableCard\";\n\nfunction TablesList({ tables, setTablesError, loadReservationsAndTables }) {\n  \n  return (\n    <div id=\"tableGrid\" className=\"tables-grid\">\n      {tables.map((table) => (\n        <div className=\"tables-card\" key={table.table_id}>\n          <TableCard\n            table_id={table.table_id}\n            table_name={table.table_name}\n            capacity={table.capacity}\n            reservation_id={table.reservation_id}\n            setTablesError={setTablesError}\n            loadReservationsAndTables={loadReservationsAndTables}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default TablesList;","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { today, previous, next } from \"../utils/date-time\";\n\nfunction DateNavButtons({ currentDate }) {\n  const history = useHistory();\n\n  // Handlers\n  const handlePrevious = (event) => {\n    event.preventDefault();\n    history.push(`/dashboard?date=${previous(currentDate)}`);\n  }\n\n  const handleToday = (event) => {\n    event.preventDefault();\n    history.push(`/dashboard?date=${today()}`);\n  }\n\n  const handleNext = (event) => {\n    event.preventDefault();\n    history.push(`/dashboard?date=${next(currentDate)}`);\n  }\n\n\n  return (\n    <div className=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button\">\n     <div className=\"btn-group\" role=\"group\">\n      <button \n        type=\"button\" \n        className=\"btn btn-outline-light\"\n        onClick={handlePrevious}\n      >\n        Previous\n      </button>\n      <button \n        type=\"button\" \n        className=\"btn btn-outline-light\"\n        onClick={handleToday}\n      >\n        Today\n      </button>\n      <button \n        type=\"button\" \n        className=\"btn btn-outline-light\"\n        onClick={handleNext}\n      >\n        Next\n      </button>\n     </div>\n    </div>\n  );\n}\n\nexport default DateNavButtons;","import React from \"react\";\n\n/**\n * Defines the alert message to render if the specified error is truthy.\n * @param error\n *  an instance of an object with `.message` property as a string, typically an Error instance.\n * @returns {JSX.Element}\n *  a bootstrap danger alert that contains the message string.\n */\n\nfunction ErrorAlert({ error, setError }) {\n  return (\n    error && (\n      <div \n        className=\"alert alert-danger m-2 alert-dismissible fade show\"\n        role=\"alert\"\n      >\n        <strong>Error</strong>: {error.message}\n        <button\n          type=\"button\"\n          className=\"close\"\n          data-dismiss=\"alert\"\n          aria-label=\"Close\"\n          onClick={() => setError(false)}\n        >\n        <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n    )\n  );\n}\n\nexport default ErrorAlert;\n","import React, { useEffect, useState } from \"react\";\nimport { listReservations, listTables } from \"../utils/api\";\nimport ReservationList from \"../reservations/ReservationList\";\nimport TablesList from \"../tables/TablesList\";\nimport DateNavButtons from \"./DateNavButtons\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport \"./Dashboard.css\";\n\n/**\n * Defines the dashboard page.\n * @param date\n *  the date for which the user wants to view reservations.\n */\nfunction Dashboard({ date }) {\n  \n  const [reservations, setReservations] = useState([]);\n  const [reservationsError, setReservationsError] = useState(null);\n  const [tables, setTables] = useState([]);\n  const [tablesError, setTablesError] = useState(null);\n\n  // Load Dashboard - reservations and tables, remove loading message //\n  useEffect(\n    loadReservationsAndTables\n    // eslint-disable-next-line \n    , [date]);\n\n  function loadReservations() {\n    const abortController = new AbortController();\n    setReservationsError(null);\n    listReservations({ date }, abortController.signal)\n      .then(setReservations)\n      .catch(setReservationsError);\n    return () => abortController.abort();\n  }\n\n  function loadTables() {\n    const abortController = new AbortController();\n    setTablesError(null);\n    listTables(abortController.signal)\n      .then(setTables)\n      .catch(setTablesError);\n    return () => abortController.abort();\n  }\n\n  function loadReservationsAndTables() {\n    const abortController = new AbortController();\n    loadReservations();\n    loadTables();\n    return () => abortController.abort();\n  }\n\n\n    return (\n      <main className=\"dashboard\">\n        <h1>Dashboard</h1>\n        <div className=\"d-md-flex flex-column\">\n          {!reservations.length && <h2>No reservations on this date.</h2>}\n        </div>\n        <ErrorAlert error={reservationsError} setError={setReservationsError} />\n\n        {/* Reservations */}\n        <div className=\"reservations-list\">\n          <h4 className=\"mb-2\">Reservations for {date}</h4>\n          <ReservationList \n            reservations={reservations}\n            setReservationsError={setReservationsError}\n            loadReservationsAndTables={loadReservationsAndTables} \n          />\n        </div>\n\n        {/* Button Toolbar */}\n        <div className=\"date-nav\">\n          <DateNavButtons currentDate={date} />\n        </div>\n\n        {/* Tables */}\n        <div className=\"tables-list\">\n          <div className=\"d-md-flex mb-3\">\n            <h4 className=\"mb-0\">Tables</h4>\n          </div>\n          {!tables && <h5 className=\"load-message\">Loading...</h5>}\n          <ErrorAlert error={tablesError} setError={setTablesError} />\n          <TablesList \n            tables={tables}\n            setTablesError={setTablesError}\n            loadReservationsAndTables={loadReservationsAndTables} \n          />\n        </div>\n      </main>\n    );\n}\n\nexport default Dashboard;","import React from \"react\";\n\n/**\n * Defines the \"Not Found\" page that is displayed for any unmatched route.\n *\n * You will not need to make changes to this file.\n *\n * @returns {JSX.Element}\n */\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction ReservationForm({ reservation, handleSubmit, handleChange }) {\n  const history = useHistory();\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"row mb-3\">\n        <div className=\"col\">\n          <label htmlFor=\"first_name\" className=\"form-label\">First Name</label>\n          <input\n            type=\"text\"\n            name=\"first_name\"\n            id=\"first_name\"\n            className=\"form-control\"\n            onChange={handleChange}\n            value={`${reservation.first_name}`}\n            required\n          />\n        </div>\n        <div className=\"col\">\n          <label htmlFor=\"last_name\" className=\"form-label\">Last Name</label>\n          <input\n            type=\"text\"\n            name=\"last_name\"\n            id=\"last_name\"\n            className=\"form-control\"\n            onChange={handleChange}\n            value={`${reservation.last_name}`}\n            required\n          />\n        </div>\n      </div>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"mobile_number\" className=\"form-label\">Mobile Number</label>\n        <input\n          type=\"tel\"\n          name=\"mobile_number\"\n          id=\"mobile_number\"\n          className=\"form-control\"\n          onChange={handleChange}\n          value={`${reservation.mobile_number}`}\n          pattern=\"^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$\"\n          required\n        />\n      </div>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"date\" className=\"form-label\">Date</label>\n        <input \n          type=\"date\"\n          name=\"reservation_date\" \n          id=\"reservation_date\"\n          className=\"form-control\" \n          onChange={handleChange}\n          value={`${reservation.reservation_date}`}\n          placeholder=\"YYYY-MM-DD\" \n          pattern=\"\\d{4}-\\d{2}-\\d{2}\"\n          required\n        />\n      </div>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"time\" className=\"form-label\">Time</label>\n        <input \n          type=\"time\" \n          name=\"reservation_time\"\n          id=\"reservation_time\"\n          className=\"form-control\" \n          onChange={handleChange}\n          value={`${reservation.reservation_time}`}\n          placeholder=\"HH:MM\" \n          pattern=\"[0-9]{2}:[0-9]{2}\"\n          required\n        />\n      </div>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"people\" className=\"form-label\">Number of Guests</label>\n        <input\n          type=\"number\"\n          name=\"people\"\n          id=\"people\"\n          className=\"form-control\"\n          onChange={handleChange}\n          value={`${reservation.people}`}\n          min=\"1\"\n          max=\"8\"\n          required\n        />\n      </div>\n\n      <button \n        type=\"submit\"\n        className=\"btn btn-primary btn-lg\"\n        style={{marginRight: \"10px\"}}>\n          Submit\n      </button>\n      <button\n        type=\"button\"\n        className=\"btn btn-secondary btn-lg\"\n        onClick={() => history.go(-1)}>\n          Cancel\n      </button>\n\n    </form>\n  );\n}\n\nexport default ReservationForm;","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { createReservation } from \"../utils/api\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport ReservationForm from \"./ReservationForm\";\n\nfunction ReservationCreate() {\n  const history = useHistory();\n  const [error, setError] = useState(null);\n\n  // Set initial empty form state //\n  const initialFormState = {\n    first_name: \"\",\n    last_name: \"\",\n    mobile_number: \"\",\n    reservation_date: \"\",\n    reservation_time: \"\",\n    people: \"\",\n  };\n  const [reservation, setReservation] = useState({ ...initialFormState });\n\n  // Handlers //\n  const handleChange = ({ target }) => {\n    setReservation({ ...reservation, [target.name]: target.value });\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const abortController = new AbortController();\n    createReservation(reservation, abortController.signal)\n    // Need to slice returned date/time to only display date, because API returns full date/time string\n      .then((newReservation) => history.push(`/dashboard?date=${newReservation.reservation_date.slice(0, 10)}`))\n      .catch((error) => setError(error));\n    \n    return () => abortController.abort();\n  };\n\n\n  return (\n    <main>\n      <div className=\"d-md-flex flex-column mb-3\">\n        <h1>Create a New Reservation</h1>\n        <ErrorAlert error={error} setError={setError}/>\n      </div>\n      \n      <ReservationForm\n        reservation={reservation}\n        handleSubmit={handleSubmit}\n        handleChange={handleChange}\n      />\n    </main>\n  );\n  }\n\n\nexport default ReservationCreate;","import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { readReservation, updateReservation } from \"../utils/api\";\nimport ReservationForm from \"./ReservationForm\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\n\nfunction ReservationEdit() {\n  const history = useHistory();\n  const reservation_id = useParams().reservation_id;\n  const [error, setError] = useState(null);\n  const [reservation, setReservation] = useState(\"\");\n\n\n  // Load reservation by id //\n  useEffect(() => {\n    async function loadReservation() {\n      const response = await readReservation(reservation_id);\n      setReservation(response);\n    }\n    loadReservation();\n  }, [reservation_id]);\n\n\n  // Handlers //\n  const handleChange = ({ target }) => {\n    setReservation({ ...reservation, [target.name]: target.value });\n  }\n   \n  const handleSubmit = (event) => {\n    event.preventDefault();   \n    const abortController = new AbortController();\n      updateReservation(reservation, abortController.signal)\n      // Need to slice returned date/time to only display date, because API returns full date/time string\n        .then(() => history.push(`/dashboard?date=${reservation.reservation_date.slice(0, 10)}`))\n        .catch((error) => setError(error));\n\n      return () => abortController.abort();\n  };\n\n\n  return (\n    <main>\n      <div className=\"d-md-flex mb-3 flex-column\">\n        <h1>Edit Reservation</h1>\n        <ErrorAlert error={error} setError={setError} />\n      </div>\n\n      <ReservationForm \n        reservation={reservation}\n        handleSubmit={handleSubmit}\n        handleChange={handleChange}\n      />\n    </main>\n  );\n}\n\nexport default ReservationEdit;","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport { createTable } from \"../utils/api\";\n\n\nfunction TableCreate() {\n    const history = useHistory();\n    const [error, setError] = useState(null);\n    const [table, setTable] = useState({\n        table_name: \"\",\n        capacity: \"\",\n    });\n\n    const handleChange = ({ target }) => {\n        setTable({ ...table, [target.name]: target.value });\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const abortController = new AbortController();\n        createTable(table, abortController.signal)\n            .then(() => history.push(\"/dashboard\"))\n            .catch((error) => setError(error));\n        return () => abortController.abort();\n    }\n\n\n    return (\n        <main>\n            <div className=\"d-md-flex mb-3\">\n                <h1>Create a New Table</h1>\n                <ErrorAlert error={error} setError={setError} />\n            </div>\n\n            {/* Table Form */}\n            <form onSubmit={handleSubmit}>\n                <div className=\"col mb-3\">\n                    <div className=\"row mb-3\">\n                        <label htmlFor=\"table_name\" className=\"form-label\">Table Name</label>\n                        <input\n                            type=\"text\"\n                            name=\"table_name\"\n                            id=\"table_name\"\n                            className=\"form-control\"\n                            onChange={handleChange}\n                            value={table.table_name}\n                            minlength=\"2\"\n                            required\n                        />\n                    </div>\n          \n                    <div className=\"row mb-3\">\n                        <label htmlFor=\"capacity\" className=\"form-label\">Capacity</label>\n                        <input\n                            type=\"number\"\n                            name=\"capacity\"\n                            id=\"capacity\"\n                            className=\"form-control\"\n                            placeholder=\"Choose a number between 1 and 8\"\n                            onChange={handleChange}\n                            value={table.capacity}\n                            min=\"1\"\n                            max=\"8\"\n                            required\n                        />\n                    </div>\n                </div>\n        \n                <button \n                    type=\"submit\"\n                    className=\"btn btn-primary btn-lg\"\n                    style={{marginRight: \"10px\"}}\n                >\n                    Submit\n                </button>\n                <button\n                    type=\"button\"\n                    className=\"btn btn-secondary btn-lg\"\n                    onClick={() => history.go(-1)}\n                >\n                    Cancel\n                </button>\n            </form>\n        </main>\n    );\n}\n\nexport default TableCreate;","import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { listTables, readReservation, updateTable } from \"../utils/api\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport \"./Seat.css\";\n\nfunction Seat() {\n  const reservation_id = useParams().reservation_id;\n  const history = useHistory();\n  const [error, setError] = useState(null);\n  const [tables, setTables] = useState([]);\n  const [reservation, setReservation] = useState([]);\n  const [selectedTable, setSelectedTable] = useState({\n    reservation_id: reservation_id,\n  });\n\n  // Load tables //\n  useEffect(() => {\n    async function loadTables() {\n      const response = await listTables();\n      setTables(response);\n    }\n    loadTables();\n  }, []);\n  \n  // Load reservation //\n  useEffect(() => {\n    async function loadReservation() {\n      const response = await readReservation(reservation_id);\n      setReservation(response);\n    }\n    loadReservation();\n  }, [reservation_id]);\n\n  // Handle table selection //\n  const handleChange = ({ target }) => {\n    setSelectedTable({ ...selectedTable, [target.name]: target.value });\n  }\n\n  // Submit and send PUT request to update table //\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    updateTable(reservation_id, selectedTable.table_id, selectedTable)\n      .then(() => history.push(\"/dashboard\"))\n      .catch((error) => setError(error));\n  }\n\n  return (\n    <main>\n      <div className=\"d-md-flex mb-3\">\n        <h1>Seating</h1>\n      </div>\n\n      <ErrorAlert error={error} setError={setError} />\n      \n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"table-select\">\n          Assign a table for reservation #{reservation_id}, for {reservation.people} people:\n        </label>\n        <div className=\"selections\">\n          <select \n            name=\"table_id\" \n            id=\"table-select\"\n            onChange={handleChange}\n          >\n            <option value=\"\">- Please choose a table -</option>\n            {tables.map((table) => (\n              <option value={table.table_id} key={table.table_name}>\n                {table.table_name} - {table.capacity}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"form-buttons\" style={{marginTop: \"10px\"}}>\n          <button \n            type=\"submit\"\n            className=\"btn btn-primary btn-lg\"\n            style={{marginRight: \"10px\"}}\n          >\n            Submit\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary btn-lg\"\n            onClick={() => history.go(-1)}\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n    </main>\n  );\n}\n\nexport default Seat;","import React, { useState } from \"react\";\nimport ReservationList from \"../reservations/ReservationList\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport { listReservations } from \"../utils/api\";\nimport \"./Search.css\";\n\nfunction Search() {\n  const [error, setError] = useState(null);\n  const [mobile_number, setMobileNumber] = useState(\"\");\n  const [reservations, setReservations] = useState([]);\n  const [reservationMessage, setReservationMessage] = useState(\"\");\n\n  \n  // Change handler //\n  const handleChange = ({ target }) => {\n    setMobileNumber(target.value);\n  }\n\n  // Handle find //\n  const handleFind = (event) => {\n    event.preventDefault();\n    const abortController = new AbortController();\n    listReservations({ mobile_number }, abortController.signal)\n      .then((reservations) => setReservations(reservations))\n      .then(setReservationMessage(\"No reservations found\"))\n      .catch((error) => setError(error));\n\n    return () => abortController.abort();\n  }\n\n\n\n  return (\n    <main>\n      <div className=\"d-md-flex mb-3 justify-content-start\">\n        <h1>Reservation Search</h1>\n        <ErrorAlert error={error} setError={setError} />\n      </div>\n\n    {/* Search Box */}\n      <div className=\"input-group mb-3\" id=\"mobileSearchBox\">\n        <input \n          type=\"text\" \n          name=\"mobile_number\"\n          className=\"form-control\" \n          onChange={handleChange}\n          value={mobile_number}\n          placeholder=\"Enter a customer's phone number\" \n          aria-label=\"Enter a customer's phone number\" \n          aria-describedby=\"button-addon2\" \n        />\n        <button \n          className=\"btn\" \n          type=\"submit\" \n          id=\"button-addon2\"\n          onClick={handleFind}>\n            Find\n        </button>\n      </div>\n\n    {/* Reservations - displays \"No reservations found\" if length is zero */}\n    <div className=\"reservationsList\">\n      {reservations.length ? \n        <ReservationList reservations={reservations} />\n        :\n        <h3>{reservationMessage}</h3>\n      }\n    </div>\n\n    </main>\n  );\n}\n\nexport default Search;","/**\n * useQuery is a custom hook that makes use of the useLocation and the URL class to parse the query parameters.\n *\n * @example\n *\n *     const query = useQuery();\n *     const date = query.get(\"date\")\n */\n\nimport { useLocation } from \"react-router-dom\";\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport default useQuery;\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"../dashboard/Dashboard\";\nimport NotFound from \"./NotFound\";\nimport { today } from \"../utils/date-time\";\nimport ReservationCreate from \"../reservations/ReservationCreate\";\nimport ReservationEdit from \"../reservations/ReservationEdit\";\nimport TablesCreate from \"../tables/TablesCreate\";\nimport Seat from \"../seats/Seat\";\nimport Search from \"../search/Search\";\nimport useQuery from \"../utils/useQuery\";\n\n/**\n * Defines all the routes for the application.\n *\n * You will need to make changes to this file.\n *\n * @returns {JSX.Element}\n */\nfunction Routes() {\n  const query = useQuery();\n  const date = query.get(\"date\");\n\n  return (\n    <Switch>\n      <Route exact={true} path=\"/\">\n        <Redirect to={\"/dashboard\"} />\n      </Route>\n\n      <Route exact={true} path=\"/reservations\">\n        <Redirect to={\"/dashboard\"} />\n      </Route>\n\n      <Route path=\"/dashboard\">\n        <Dashboard date={date ? date : today()} />\n      </Route>\n\n      <Route path=\"/reservations/new\">\n        <ReservationCreate />\n      </Route>\n\n      <Route path=\"/reservations/:reservation_id/edit\">\n        <ReservationEdit />\n      </Route>\n\n      <Route path=\"/reservations/:reservation_id/seat\">\n        <Seat />\n      </Route>\n\n      <Route path=\"/tables/new\">\n        <TablesCreate />\n      </Route>\n\n      <Route path=\"/search\">\n        <Search />\n      </Route>\n\n      <Route>\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Menu from \"./Menu\";\nimport Routes from \"./Routes\";\n\nimport \"./Layout.css\";\n\n/**\n * Defines the main layout of the application.\n *\n * You will not need to make changes to this file.\n *\n * @returns {JSX.Element}\n */\nfunction Layout() {\n  return (\n    <div className=\"container-fluid d-flex flex-column\">\n      <div className=\"row h-100\">\n        <div className=\"col-md-2 side-bar\">\n          <Menu />\n        </div>\n        <div className=\"col main body\">\n          <Routes />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./layout/Layout\";\n\n/**\n * Defines the root application component.\n * @returns {JSX.Element}\n */\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\">\n        <Layout />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}